p=plot_bar(VOC, "hour",fill="Peak_ID", facet_grid = ~microbe)
p + geom_point(aes(x=microbe, y=Abundance), color="black", size=3)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[20:22] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
# read in data
meta <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/meta.csv")
meta$hour=as.factor(meta$hour)
rownames(meta) <- meta$SampleID_merge
SAMP <- sample_data(meta)
sample_names(SAMP)<-meta$SampleID
peaks <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/peakFFPA.csv")
TAX <- tax_table(peaks) # gives a warning, don't freak out
taxa_names(TAX)<-peaks$Peak_ID
colnames(TAX)<- colnames(peaks)
abund <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/otuFFPA.csv", colClasses = c("factor","factor", rep("numeric", times= 44)))
# read in peak areas, assigning factors of diff classifications based on columns
rownames(abund) <- abund$Peak_ID #give abund rows names according to "Peak_ID" in peak.csv table
OTU <- otu_table(abund[,-c(1:2)], taxa_are_rows=T) #create a table with only peak areas, compounds are taxa
VOC <- phyloseq(OTU, TAX, SAMP) #IF YOU GET A "SAMPLE_NAMES()" ERROR MAKE SURE YOUR NAMES DO NOT START WITH A NUMBER
#returns: "phyloseq-class experiment-level object
#otu_table()   OTU Table:       [ 110 taxa and 24 samples ] "taxa" = VOCs "samples" = VOC pulls
#sample_data() Sample Data:     [ 24 samples by 8 sample variables ] "sample variable" = VOC jar
#tax_table()   Taxonomy Table:  [ 110 taxa by 2 taxonomic ranks ] "taxonomic rank" = microbe species"
p=plot_bar(VOC, "hour",fill="Peak_ID", facet_grid = ~microbe)
p + geom_point(aes(x=microbe, y=Abundance), color="black", size=3)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[15:17] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$hour, new.order = c("2","24","48"))
summary(new.dat)
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (65.6% Var. Expl.)")+ 	## !don't forget to update these moving forward!
ylab("PCoA2 (21.2% Var. Expl.)")
###	#PCoA with Jaccard distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "jaccard")
plot_ordination( VOC, ord, color = "hour", shape = "microbe", type = "samples")
# split plot of compounds driving separation and samples in PC1/PC2.
plot_ordination(VOC, ord, type = "samples", color = "hour", shape = "microbe", label = "rep")
###
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$hour, sample_data(VOC)$rep) # make a new matrix
names(new.dat)[21:23] <- c("Microbe", "Hour", "Rep")
# read in data
meta <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/meta.csv")
meta$hour=as.factor(meta$hour)
rownames(meta) <- meta$SampleID_merge
SAMP <- sample_data(meta)
sample_names(SAMP)<-meta$SampleID
peaks <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/peakFFPA.csv")
TAX <- tax_table(peaks) # gives a warning, don't freak out
taxa_names(TAX)<-peaks$Peak_ID
colnames(TAX)<- colnames(peaks)
abund <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/otuFFPA.csv", colClasses = c("factor","factor", rep("numeric", times= 44)))
# read in peak areas, assigning factors of diff classifications based on columns
rownames(abund) <- abund$Peak_ID #give abund rows names according to "Peak_ID" in peak.csv table
OTU <- otu_table(abund[,-c(1:2)], taxa_are_rows=T) #create a table with only peak areas, compounds are taxa
VOC <- phyloseq(OTU, TAX, SAMP) #IF YOU GET A "SAMPLE_NAMES()" ERROR MAKE SURE YOUR NAMES DO NOT START WITH A NUMBER
#returns: "phyloseq-class experiment-level object
#otu_table()   OTU Table:       [ 110 taxa and 24 samples ] "taxa" = VOCs "samples" = VOC pulls
#sample_data() Sample Data:     [ 24 samples by 8 sample variables ] "sample variable" = VOC jar
#tax_table()   Taxonomy Table:  [ 110 taxa by 2 taxonomic ranks ] "taxonomic rank" = microbe species"
p=plot_bar(VOC, "hour",fill="Peak_ID", facet_grid = ~microbe)
p + geom_point(aes(x=microbe, y=Abundance), color="black", size=3)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[15:17] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$hour, new.order = c("2","24","48"))
summary(new.dat)
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (65.6% Var. Expl.)")+ 	## !don't forget to update these moving forward!
ylab("PCoA2 (21.2% Var. Expl.)")
###	#PCoA with Jaccard distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "jaccard")
plot_ordination( VOC, ord, color = "hour", shape = "microbe", type = "samples")
# split plot of compounds driving separation and samples in PC1/PC2.
plot_ordination(VOC, ord, type = "samples", color = "hour", shape = "microbe", label = "rep")
###
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$hour, sample_data(VOC)$rep) # make a new matrix
names(new.dat)[18:20] <- c("Microbe", "Hour", "Rep")
# read in data
meta <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/meta.csv")
meta$hour=as.factor(meta$hour)
rownames(meta) <- meta$SampleID_merge
SAMP <- sample_data(meta)
sample_names(SAMP)<-meta$SampleID
peaks <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/peakFFPA.csv")
TAX <- tax_table(peaks) # gives a warning, don't freak out
taxa_names(TAX)<-peaks$Peak_ID
colnames(TAX)<- colnames(peaks)
abund <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/otuFFPA.csv", colClasses = c("factor","factor", rep("numeric", times= 44)))
# read in peak areas, assigning factors of diff classifications based on columns
rownames(abund) <- abund$Peak_ID #give abund rows names according to "Peak_ID" in peak.csv table
OTU <- otu_table(abund[,-c(1:2)], taxa_are_rows=T) #create a table with only peak areas, compounds are taxa
VOC <- phyloseq(OTU, TAX, SAMP) #IF YOU GET A "SAMPLE_NAMES()" ERROR MAKE SURE YOUR NAMES DO NOT START WITH A NUMBER
#returns: "phyloseq-class experiment-level object
#otu_table()   OTU Table:       [ 110 taxa and 24 samples ] "taxa" = VOCs "samples" = VOC pulls
#sample_data() Sample Data:     [ 24 samples by 8 sample variables ] "sample variable" = VOC jar
#tax_table()   Taxonomy Table:  [ 110 taxa by 2 taxonomic ranks ] "taxonomic rank" = microbe species"
p=plot_bar(VOC, "hour",fill="Peak_ID", facet_grid = ~microbe)
p + geom_point(aes(x=microbe, y=Abundance), color="black", size=3)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[15:17] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$hour, new.order = c("2","24","48"))
summary(new.dat)
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (65.6% Var. Expl.)")+ 	## !don't forget to update these moving forward!
ylab("PCoA2 (21.2% Var. Expl.)")
###	#PCoA with Jaccard distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "jaccard")
plot_ordination( VOC, ord, color = "hour", shape = "microbe", type = "samples")
# split plot of compounds driving separation and samples in PC1/PC2.
plot_ordination(VOC, ord, type = "samples", color = "hour", shape = "microbe", label = "rep")
###
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$hour, sample_data(VOC)$rep) # make a new matrix
names(new.dat)[16:18] <- c("Microbe", "Hour", "Rep")
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$Microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$Hour, new.order = c("2","24", "48"))
###
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (54.6% Var. Expl.)")+
ylab("PCoA2 (21.5% Var. Expl.)")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyr")
#install.packages("Rmisc")
library(Rmisc)
library(tidyr)
library(readxl)
library(ggplot2)
library(boot)
data = read_excel("~/GitHub/BACandBlue/data/BaCandBLUE_Bioassay/RAW_swd_vs_inoculated_blueberryjuice.xlsx",
sheet = "data4r")
#View(data)
##########################################
#Index Plots with 95% confidence itervals
##########################################
data = read_excel("~/GitHub/BACandBlue/data/BaCandBLUE_Bioassay/RAW_swd_vs_inoculated_blueberryjuice.xlsx",
sheet = "data4r")
data2=data %>%
mutate(data2,escaped=total_flies-(flies_in_treat+flies_in_control+flies_outside)) %>%
dplyr::select(microbe, flies_in_treat, flies_outside, flies_in_control, escaped) %>%
tidyr::gather(location, observed, flies_in_treat:escaped)
data2=cbind(data2,CI=(CI(data2$observed,ci=0.95))) #CI(x=vector in question, ci=interval to be calculated)
# read in data
meta <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/meta.csv")
meta$hour=as.factor(meta$hour)
rownames(meta) <- meta$SampleID_merge
SAMP <- sample_data(meta)
sample_names(SAMP)<-meta$SampleID
peaks <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/peakFFPA.csv")
TAX <- tax_table(peaks) # gives a warning, don't freak out
taxa_names(TAX)<-peaks$Peak_ID
colnames(TAX)<- colnames(peaks)
abund <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/otuFFPA.csv", colClasses = c("factor","factor", rep("numeric", times= 44)))
# read in peak areas, assigning factors of diff classifications based on columns
rownames(abund) <- abund$Peak_ID #give abund rows names according to "Peak_ID" in peak.csv table
OTU <- otu_table(abund[,-c(1:2)], taxa_are_rows=T) #create a table with only peak areas, compounds are taxa
VOC <- phyloseq(OTU, TAX, SAMP) #IF YOU GET A "SAMPLE_NAMES()" ERROR MAKE SURE YOUR NAMES DO NOT START WITH A NUMBER
#returns: "phyloseq-class experiment-level object
#otu_table()   OTU Table:       [ 110 taxa and 24 samples ] "taxa" = VOCs "samples" = VOC pulls
#sample_data() Sample Data:     [ 24 samples by 8 sample variables ] "sample variable" = VOC jar
#tax_table()   Taxonomy Table:  [ 110 taxa by 2 taxonomic ranks ] "taxonomic rank" = microbe species"
p=plot_bar(VOC, "hour",fill="Peak_ID", facet_grid = ~microbe)
p + geom_point(aes(x=microbe, y=Abundance), color="black", size=3)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[15:17] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$hour, new.order = c("2","24","48"))
summary(new.dat)
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (65.6% Var. Expl.)")+ 	## !don't forget to update these moving forward!
ylab("PCoA2 (21.2% Var. Expl.)")
###	#PCoA with Jaccard distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "jaccard")
plot_ordination( VOC, ord, color = "hour", shape = "microbe", type = "samples")
# split plot of compounds driving separation and samples in PC1/PC2.
plot_ordination(VOC, ord, type = "samples", color = "hour", shape = "microbe", label = "rep")
###
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$hour, sample_data(VOC)$rep) # make a new matrix
names(new.dat)[16:18] <- c("Microbe", "Hour", "Rep")
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$Microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$Hour, new.order = c("2","24", "48"))
###
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (54.6% Var. Expl.)")+
ylab("PCoA2 (21.5% Var. Expl.)")
ord <- ordinate(VOC, method = "PCoA", distance = "jaccard")
plot_ordination( VOC, ord, color = "hour", shape = "microbe", type = "samples")
# split plot of compounds driving separation and samples in PC1/PC2.
plot_ordination(VOC, ord, type = "samples", color = "hour", shape = "microbe", label = "rep")
###
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$hour, sample_data(VOC)$rep) # make a new matrix
names(new.dat)[16:18] <- c("Microbe", "Hour", "Rep")
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$Microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$Hour, new.order = c("2","24", "48"))
###
# read in data
meta <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/meta.csv")
meta$hour=as.factor(meta$hour)
rownames(meta) <- meta$SampleID_merge
SAMP <- sample_data(meta)
sample_names(SAMP)<-meta$SampleID
peaks <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/peakFFPA.csv")
TAX <- tax_table(peaks) # gives a warning, don't freak out
taxa_names(TAX)<-peaks$Peak_ID
colnames(TAX)<- colnames(peaks)
abund <- read.csv("~/GitHub/BACandBlue/data/BACandBLUE_SUBSET_FFvsPA_10BB_PROvsREP/otuFFPA.csv", colClasses = c("factor","factor", rep("numeric", times= 44)))
# read in peak areas, assigning factors of diff classifications based on columns
rownames(abund) <- abund$Peak_ID #give abund rows names according to "Peak_ID" in peak.csv table
OTU <- otu_table(abund[,-c(1:2)], taxa_are_rows=T) #create a table with only peak areas, compounds are taxa
VOC <- phyloseq(OTU, TAX, SAMP) #IF YOU GET A "SAMPLE_NAMES()" ERROR MAKE SURE YOUR NAMES DO NOT START WITH A NUMBER
#returns: "phyloseq-class experiment-level object
#otu_table()   OTU Table:       [ 110 taxa and 24 samples ] "taxa" = VOCs "samples" = VOC pulls
#sample_data() Sample Data:     [ 24 samples by 8 sample variables ] "sample variable" = VOC jar
#tax_table()   Taxonomy Table:  [ 110 taxa by 2 taxonomic ranks ] "taxonomic rank" = microbe species"
p=plot_bar(VOC, "hour",fill="Peak_ID", facet_grid = ~microbe)
p + geom_point(aes(x=microbe, y=Abundance), color="black", size=3)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[15:17] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$hour, new.order = c("2","24","48"))
summary(new.dat)
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (61.5% Var. Expl.)")+ 	## !don't forget to update these moving forward!
ylab("PCoA2 (47.3% Var. Expl.)")
###	#PCoA with Jaccard distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "jaccard")
plot_ordination( VOC, ord, color = "hour", shape = "microbe", type = "samples")
# split plot of compounds driving separation and samples in PC1/PC2.
plot_ordination(VOC, ord, type = "samples", color = "hour", shape = "microbe", label = "rep")
###
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$hour, sample_data(VOC)$rep) # make a new matrix
names(new.dat)[16:18] <- c("Microbe", "Hour", "Rep")
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$Microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$Hour, new.order = c("2","24", "48"))
###
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (52.5% Var. Expl.)")+
ylab("PCoA2 (42.4% Var. Expl.)")
View(new.dat)
###############################
# Analysis and figures
##############################
##############
#    PCoAs   #
##############
###	#PCoA with Bray-Curtis Distances#	###
ord <- ordinate(VOC, method = "PCoA", distance = "bray")
plot_ordination(VOC, ord, color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
plot_ordination(VOC, ord, type = "juice", color = "hour", shape = "microbe", label = "rep")+
theme_bw() + theme(text = element_text(size = 20)) + geom_point(size = 4)
PCs <- data.frame(scores(ord$vectors))
new.dat <- cbind(PCs, sample_data(VOC)$microbe, sample_data(VOC)$rep, sample_data(VOC)$hour) # make a new matrix
names(new.dat)[15:17] <- c("microbe","juice","hour") #for the "must be the same length as vector" error make sure that the info inside the bracets matches empty columns in the dataframe your creating"
library(gdata)
new.dat$Microbe <- reorder.factor(new.dat$microbe, new.order = c("FF", "PA"))
new.dat$Hour <- reorder.factor(new.dat$hour, new.order = c("2","24","48"))
summary(new.dat)
ggplot(new.dat, aes(x=Axis.1, y= Axis.2)) +
geom_point(aes(color = Microbe, shape = Hour), position ="jitter") +
facet_grid(~Hour)+
theme_bw()+
xlab("PCoA1 (61.5% Var. Expl.)")+ 	## !don't forget to update these moving forward!
ylab("PCoA2 (47.3% Var. Expl.)")
sample_data(VOC)$fday <- factor(sample_data(VOC)$hour)
sample_data(VOC)$fmicrobe <- factor(sample_data(VOC)$microbe)
sample_data(VOC)$fnectar <- factor(sample_data(VOC)$rep)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$fnectar+ sample_data(VOC)$fday+
+ sample_data(VOC)$fmicrobe)
summary(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$fnectar * sample_data(VOC)$fday * sample_data(VOC)$fmicrobe)
summary(fit)
sample_data(VOC)$fday <- factor(sample_data(VOC)$hour)
sample_data(VOC)$fmicrobe <- factor(sample_data(VOC)$microbe)
sample_data(VOC)$fnectar <- factor(sample_data(VOC)$rep)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$fnectar+ sample_data(VOC)$fday+
+ sample_data(VOC)$fmicrobe)
summary(fit)
# same results
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$fnectar * sample_data(VOC)$fday * sample_data(VOC)$fmicrobe)
summary(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep+ sample_data(VOC)$fday+
+ sample_data(VOC)$microbe)
anova(fit)
TukeyHSD(aov(fit), which="sample_data(VOC)$microbe")
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep+ sample_data(VOC)$fday+
+ sample_data(VOC)$microbe)
anova(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep+ sample_data(VOC)$fday+
+ sample_data(VOC)$microbe)
anova(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep+ sample_data(VOC)$fday+
+ sample_data(VOC)$microbe)
anova(fit)
TukeyHSD(aov(fit), which="sample_data(VOC)$microbe")
TukeyHSD(aov(fit), which="sample_data(VOC)$rep")
TukeyHSD(aov(fit), which="sample_data(VOC)$fday")
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday
* sample_data(VOC)$microbe)
aov(fit)
######################################################################################################################################
Analysis of Variance Table
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday
* sample_data(VOC)$microbe)
aov(fit)
TukeyHSD(aov(fit), which="sample_data(VOC)$fday")
TukeyHSD(aov(fit), which="sample_data(VOC)$rep")
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday
* sample_data(VOC)$microbe)
aov(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$fday
* sample_data(VOC)$microbe)
aov(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday
* sample_data(VOC)$microbe)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday
* sample_data(VOC)$microbe)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday
* sample_data(VOC)$microbe)
aov(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$fday
* sample_data(VOC)$microbe)
aov(fit)
fit <- lm(sample_sums(VOC)~ sample_data(VOC)$rep* sample_data(VOC)$fday *sample_data(VOC)$microbe)
aov(fit)
fit <- lm(sample_sums(VOC)~sample_data(VOC)$fday *sample_data(VOC)$microbe)
aov(fit)
TukeyHSD(aov(fit), which="sample_data(VOC)$fday")
TukeyHSD(aov(fit), which="sample_data(VOC)$rep")
TukeyHSD(aov(fit), which="sample_data(VOC)$microbe")
fit <- lm(sample_sums(VOC)~sample_data(VOC)$fday
aov(fit)
fit <- lm(sample_sums(VOC)~sample_data(VOC)$fday)
aov(fit)
TukeyHSD(aov(fit), which="sample_data(VOC)$rep")
TukeyHSD(aov(fit), which="sample_data(VOC)$microbe")
TukeyHSD(aov(fit), which="sample_data(VOC)$fday")
TukeyHSD(aov(fit), which="sample_data(VOC)$microbe")
DayTwo <- subset_samples(VOC, day=="2")
DayTwo <- subset_samples(VOC, hour=="2")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$rep * sample_data(DayTwo)$microbe)
DayTwo <- subset_samples(VOC, Hour=="2")
DayTwo <- subset_samples(VOC, hour=="2")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$rep * sample_data(DayTwo)$microbe)
aov(fit)
DayTwo <- subset_samples(VOC, hour=="24")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$rep * sample_data(DayTwo)$microbe)
aov(fit)
summary(fit)
DayTwo <- subset_samples(VOC, hour=="2")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$rep * sample_data(DayTwo)$microbe)
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$day * sample_data(DayTwo)$microbe)
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$fday * sample_data(DayTwo)$microbe)
DayTwo <- subset_samples(VOC, hour=="2"| hour=="24")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$fday * sample_data(DayTwo)$microbe)
summary(fit)
aov(fit)
summary
summary(fit)
##########################################################################################################
Analysis of Variance Table
summary(fit)
aov(fit)
anova(fit)
DayTwo <- subset_samples(VOC, hour=="2")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$fday * sample_data(DayTwo)$microbe)
DayTwo <- subset_samples(VOC, hour=="2"| hour=="24")
fit <- lm(sample_sums(DayTwo)~ sample_data(DayTwo)$fday * sample_data(DayTwo)$microbe)
anova(fit)
TukeyHSD(aov(fit), which="sample_data(DayTwo)$microbe.treatmemt")
TukeyHSD(aov(fit), which="sample_data(DayTwo)$microbe")
abund <- round(abund[,-c(1:2)], digits = 0)
OTU <- otu_table(abund, taxa_are_rows=T)
VOC <- phyloseq(OTU, TAX, SAMP)
VOC
plot_richness(VOC, x = "microbe", measures = c("Observed", "Shannon", "Simpson"))
plot_richness(VOC, x = "rep", measures = c("Observed", "Shannon", "Simpson"))
fit <- lm(estimate_richness(VOC)$Shannon ~ sample_data(VOC)$microbe)
anova(fit)
fit <- lm(estimate_richness(VOC)$Observed ~ sample_data(VOC)$microbe)
fit
fit <- lm(estimate_richness(VOC)$Simpson ~ sample_data(VOC)$microbe)
fit
fit <- lm(estimate_richness(VOC)$Shannon ~ sample_data(VOC)$rep)
fit
fit <- lm(estimate_richness(VOC)$Shannon ~ sample_data(VOC)$rep)
fit
library("DESeq2")
deobj <- phyloseq_to_deseq2(VOC, ~ fday + microbe)
diagdds = DESeq(deobj, test="Wald", fitType="local")
#NoZero <- subset_samples(VOC, hour!="2")
deobj <- phyloseq_to_deseq2(VOC, ~  sample_data(VOC)$fday + microbe)
#NoZero <- subset_samples(VOC, hour!="2")
deobj <- phyloseq_to_deseq2(VOC, ~  sample_data(VOC)$fday +  sample_data(VOC)$microbe)
diagdds = DESeq(deobj, test="Wald", fitType="local")
